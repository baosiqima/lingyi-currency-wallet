<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:db="http://www.springframework.net/database"
         xmlns:tx="http://www.springframework.net/tx">

 <!-- Database Configuration -->
  <db:provider id="DbProvider"
                   provider="MySql-6.2.2"
                   connectionString="Server=localhost;Database=CoinExchangeDev;User ID=root;Password=123456;"/>

  <!-- NHibernate SessionFactory configuration -->
  <object id="NHibernateSessionFactory" type="Spring.Data.NHibernate.LocalSessionFactoryObject, Spring.Data.NHibernate30">
    <property name="DbProvider" ref="DbProvider"/>
    <property name="MappingAssemblies">
      <list>
        <value>CoinExchange.Trades.ReadModel.Persistence</value>
      </list>
    </property>
    <property name="HibernateProperties">
      <dictionary>
        <entry key="hibernate.connection.provider" value="NHibernate.Connection.DriverConnectionProvider"/>
        <entry key="dialect" value="NHibernate.Dialect.MySQL5Dialect"/>
        <entry key="connection.driver_class" value="NHibernate.Driver.MySqlDataDriver"/>
      </dictionary>
    </property>

    <!-- provides integation with Spring's declarative transaction management features -->
    <property name="ExposeTransactionAwareSessionFactory" value="true" />

  </object>

  <!-- Transaction Management Strategy - local database transactions -->
  <object id="transactionManager"
        type="Spring.Data.NHibernate.HibernateTransactionManager, Spring.Data.NHibernate30">
    <property name="DbProvider" ref="DbProvider"/>
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>

  <!-- Exception translation object post processor -->
  <!--<object type="Spring.Dao.Attributes.PersistenceExceptionTranslationPostProcessor, Spring.Data"/>-->

  <!-- Repositories -->
  <object id="PersistenceRepository" type="CoinExchange.Trades.ReadModel.Persistence.NHibernate.PersistenceRepository, CoinExchange.Trades.ReadModel.Persistence">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>

  <object id="OrderRepository" type="CoinExchange.Trades.ReadModel.Persistence.NHibernate.OrderRepository, CoinExchange.Trades.ReadModel.Persistence">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>

  <object id="TradeRepository" type="CoinExchange.Trades.ReadModel.Persistence.NHibernate.TradeRepository, CoinExchange.Trades.ReadModel.Persistence">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>
  <object id="OhlcRepository" type="CoinExchange.Trades.ReadModel.Persistence.NHibernate.OhlcRepository, CoinExchange.Trades.ReadModel.Persistence">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>
  <object id="TickerInfoRepository" type="CoinExchange.Trades.ReadModel.Persistence.NHibernate.TickerInfoRepository, CoinExchange.Trades.ReadModel.Persistence">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>
  <object id="CurrencyPairRepository" type="CoinExchange.Trades.ReadModel.Persistence.NHibernate.CurrencyPairRepository, CoinExchange.Trades.ReadModel.Persistence">
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>
  <tx:attribute-driven/>
</objects>